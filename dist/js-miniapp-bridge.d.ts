// Generated by dts-bundle-generator v6.13.0

declare enum MESSAGE_TOPICS {
	ACCOUNT_TOKEN = "ACCOUNT_TOKEN",
	CHAT_MESSAGE = "CHAT_MESSAGE"
}
export type TTopic = keyof typeof MESSAGE_TOPICS;
export interface ISubscribeOptions {
	topic: Partial<TTopic>;
}
export declare type ISubscriptionCallback<T = unknown> = (result: {
	topic: string;
	data: T;
}) => void;
export interface IMessage {
	topic: Partial<TTopic>;
	data: string;
}
export interface IPortalSubscriptionData {
	message: string;
}
export interface IPortalSubscription {
	subscriptionRef: number;
	topic: string;
	data?: IPortalSubscriptionData;
}
export interface IInitialContext<T = unknown> {
	name: string;
	value: T | undefined;
}
export declare const SendMessage: (params: IMessage) => Promise<void>;
export declare const SubscribeToMessage: (options: ISubscribeOptions, callback: ISubscriptionCallback) => Promise<IPortalSubscription>;
export declare const UnsubscribeFromMessage: (options: IPortalSubscription) => Promise<void>;
export declare const GetInitialContext: <T = unknown>() => IInitialContext<T> | undefined;

export {};
